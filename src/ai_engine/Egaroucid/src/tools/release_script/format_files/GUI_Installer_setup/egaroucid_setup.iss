; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define version_dir "REPLACE_VERSION_UNDERBAR"
#define version_dot "REPLACE_VERSION_DOT"

#define MyAppName "Egaroucid"
#define MyAppVersion version_dot + " Windows"
#define MyAppPublisher "Takuto Yamana"
#define MyAppURL "https://www.egaroucid.nyanyan.dev/"
#define EGAROUCID_RELEASE_DIR "./../"
#define EGAROUCID_SIMD_EXE "Egaroucid_" + version_dir + "_SIMD.exe"
#define EGAROUCID_GENERIC_EXE "Egaroucid_" + version_dir + "_Generic.exe"
#define EGAROUCID_AVX512_EXE "Egaroucid_" + version_dir + "_AVX512.exe"

[Setup]
PrivilegesRequired=none
ArchitecturesInstallIn64BitMode=x64compatible
ArchitecturesAllowed=x64compatible
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}_{#version_dir}
DisableProgramGroupPage=yes
LicenseFile={#EGAROUCID_RELEASE_DIR}\files\license.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
SetupIconFile={#EGAROUCID_RELEASE_DIR}\files\favicon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "{#EGAROUCID_RELEASE_DIR}\installer\{#EGAROUCID_SIMD_EXE}"; DestDir: "{app}"; Flags: ignoreversion; Check: ShouldInstall_SIMD
Source: "{#EGAROUCID_RELEASE_DIR}\installer\{#EGAROUCID_GENERIC_EXE}"; DestDir: "{app}"; Flags: ignoreversion; Check: ShouldInstall_GENERIC
Source: "{#EGAROUCID_RELEASE_DIR}\installer\{#EGAROUCID_AVX512_EXE}"; DestDir: "{app}"; Flags: ignoreversion; Check: ShouldInstall_AVX512
Source: "{#EGAROUCID_RELEASE_DIR}\files\LICENSE"; DestDir: "{app}";
Source: "{#EGAROUCID_RELEASE_DIR}\files\resources\*"; DestDir: "{app}\resources"; Flags: recursesubdirs;
Source: "{#EGAROUCID_RELEASE_DIR}\files\AppData\Egaroucid\*"; DestDir: "{userappdata}\Local\Egaroucid"; Flags: recursesubdirs;
Source: "{#EGAROUCID_RELEASE_DIR}\files\Documents\Egaroucid\*"; DestDir: "{userdocs}\Egaroucid"; Flags: recursesubdirs;
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_SIMD_EXE}"; Check: ShouldInstall_SIMD
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_GENERIC_EXE}"; Check: ShouldInstall_GENERIC
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_AVX512_EXE}"; Check: ShouldInstall_AVX512
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_SIMD_EXE}"; Check: ShouldInstall_SIMD; Tasks: desktopicon
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_GENERIC_EXE}"; Check: ShouldInstall_GENERIC; Tasks: desktopicon
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#EGAROUCID_AVX512_EXE}"; Check: ShouldInstall_AVX512; Tasks: desktopicon

[Run]
Filename: "{app}\{#EGAROUCID_SIMD_EXE}"; Check: ShouldInstall_SIMD; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
Filename: "{app}\{#EGAROUCID_GENERIC_EXE}"; Check: ShouldInstall_GENERIC; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
Filename: "{app}\{#EGAROUCID_AVX512_EXE}"; Check: ShouldInstall_AVX512; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
Filename: "https://www.egaroucid.nyanyan.dev/ja/usage/"; Flags: shellexec postinstall runmaximized; Description: "Show Usage"

[Code]
function IsProcessorFeaturePresent(Feature: Integer): Boolean;
external 'IsProcessorFeaturePresent@kernel32.dll stdcall';

function ShouldInstall_SIMD: Boolean;
begin
  Result := IsProcessorFeaturePresent(40) and (not IsProcessorFeaturePresent(41)); {AVX2 & !AVX512}
end;


function ShouldInstall_GENERIC: Boolean;
begin
  Result := not IsProcessorFeaturePresent(40); {!AVX2}
end;

function ShouldInstall_AVX512: Boolean;
begin
  Result := IsProcessorFeaturePresent(40) and IsProcessorFeaturePresent(41); {AVX2 & AVX512}
end;
